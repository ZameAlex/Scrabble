<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxMSEhUTExMVFhUVFRcYGBgWGBogGBgXFxodFx0YFxga
        HiggGBolHRcVITEhJSkrLi4uFx8zODMtNygtLiv/2wBDAQoKCg4NDhcPDxsrHRUdLS0tLS0tKystLS0t
        LS0tLS0tLS0rLS0tLS0tLS0tNy0tLS0tLS0tLTc3LS03LS03LS3/wAARCAC3ARMDASIAAhEBAxEB/8QA
        GQAAAwEBAQAAAAAAAAAAAAAAAgMEAQAF/8QAQhAAAQICAw0GBQMCBQUAAAAAAQACAxFRkdEEEiExQVJh
        cYGSocHSE0JiseHwFFOCovEisuIycjNDk8LyI2ODo9P/xAAYAQADAQEAAAAAAAAAAAAAAAAAAQIDBP/E
        ABwRAQEBAQEBAQEBAAAAAAAAAAABESECEmFRMf/aAAwDAQACEQMRAD8A8Rgdm8U1kM6Kh5o2NGnePUqG
        NFB3jasb6dUgBDd7HoUTYfvB0pwhih1bkyHCHirdas7VyOhTynzVEMCg/cthwhS7j1I2whkcazas7V4F
        7J+5cZIQzXWfRUiEM51ZRi5mnKT71KdPEzWHT7+ooxC8PvYQquxFLqlxh+J1QS+jShvufIjmsfCB07Gq
        xsE5z622LLxx7795vSloRdgck8fvE5EIQ0/daqjDJ75OstsQ3pz3fbYnoTdkPYKAs0E7ysawnvuqb0pw
        uc5z91vSl9G84Yclc7E1jfDwNirMA57qm9C0XOc51TOlGglsLJhq9F14BkG6VQIJzjUzpSnQDjv3VN6E
        tIgDVukIp0kbVhYc59TelayE7PcNyxM8LvRlDTV0psNksh2YB58lvYn5j/tsXC5znnbecwjRgztrSzjy
        +/qXOhE4O04MsQfDgYREP2dKCw52EYj72ySpyyS2WBFDgDPNTeQRm5QcbydYbzCNGFOA9/8AFBIaanWJ
        zrkbkeRqDOTUt1yt+Y7hyCqWEF0vFxsU0V0jiOv3JU/Cg99yU+4BivuDeYVSxFiN7/ZkOKlixRSN4L0I
        1xBve4NHJRPuc5HcRYtfNiKm7QZw3lyeLmOc6s2LlexIodzjOHBPbcU8oqUrb3NbtHojZe5rT9NoWd1p
        I9CHceqpObcfuRsUUO9zG1KiFeZjavRZ3Wki2HcwGUVprLk17PRRtlmjhYnNDMd6zgs6rFguU0efJd2e
        h1RUwhDNbslYmdkzNZULFJ4Mt9z5Ib+nBrWtYw9yHU3kF3wzMxmweiQxoeMiK/NGCtD8NDPdbtC34SHm
        s3PRHDxheTkdUiDNdRXGDCGNrR9I8imNueHjvGbrUtDmyGUVFF2rD3m+9CxsNny27iOTcwboSLAC8zm8
        LFuCma2TcwbosQlrfljdFiBjbwe/yh7IZTLXasDYZ7ram2YV3ZMzG7G+iDxrrnGSW38IBBokhMBmGbG1
        BcIEPMZujWmGuYaAVPEBxYinPgNHcbuBLbCGY0T8Awpw0zoLj3Sa1wuV2Rp3rAq+zZmtP0NonlRiGzMb
        saJ8E/oJWwCO5xKMsNHFOdCZjvBuBYGw8V4N0WI0ii0aKweS282bBKuSe2Aw4bzgtFzQ8wbqNKoSNI48
        lrnjbSCfJ2NVPudg7gqNmBLLWnuir1VSoqWO8ZJy90Lz4x8RrFq9WLc7Jf0NqbzSXQGnI2ocgtfNZ15e
        0VrlcbmZQ3dHSuV/SXlNLDm/dYqYQZo42JLHHw1KkONFWHmj0uGwSykV+ioa1py+VqRDec07vqrLniT2
        ZLVj6awbWszvJMbeZ4xLRNE1xNOq9xrOqYb3PbWF18M4av09SphE0HyR3xGTip0JjeZ0tF8JfaiBh6MG
        W+aapKgxJZFxugI0+hbGh53Fa+KwYi2uxEy6ARicdk/IJjTPOqKkiGxGZza5eRwo+3bnDe9VQ0a+KIMP
        slGhA+IzI8DVKxK7fxYKuc+C9Tsj7mkvhGlGwIHXQMjm7Wz4mS1t0CeG9GmYrwKsQzo4LezPs2BPYabt
        2/MEhpHNaYjckQYDOf6cqoEA6NU0XZmlqWwJhEbntlOZkRP9y0RWZ4rFM8ideOpG6bFj2uxXw3UAgubn
        DCZnTkS3FueOFieGOynggvznAV2pmXIYf1itEGtzhwT233sG1Oa008DajSShraRwTG3tI2AJ3aSGM1G1
        b2/i4JaXSje+xYuvm5SjN0eLzQujHO4eqZZSXkZC7ilucKZ6wU/tCaakD3n2BYqiajjOaKRsOXYp4r6L
        6o2KmK2eHCNliS73+krWIpAijx7pXIiNW6VitLyoEB0sIfXD5q2HcpzXU4XCxIhX9JwJ8OK7R72J+rVS
        GtuPF/EnzCtZc8sjvs5lTMiOo87FTDc4ZAsfVrSHshgZH1stTxDGRjj9TepTteaRWLUxkY0trKzqsOa0
        /L4t6lt47Iz9vUsZEJyiscymiL4hveqkdKcx/wAv9vWibPLDI2t6kXat9kn3jWG6AJ4sCD62+dkYa22o
        WuflY7YWdSL4rVX6I4cfR5JDrhGOSG77Opb2h+W77Opc+LonYsD9HmgsbN/y3Vt6iumcsM/bauEUZfP1
        WF3vCgBaT8v9o/3FH2x+Wa2dSS59HmOZWGLgwg7BPymg8P7Z2RhG1nUFvbuzDW3qU/bj3KqWBYCDKY4D
        kcSMGKXPd8o1s6kBiOyQX7zOtAWgD+nRixLmXpxSq9EDC3GIf8oy/uZbzSxCfkhS2t6lTJtAx+ysvBT5
        p6ZQZHGJmuTm2hNa2IcbPubatvNJ4rZmknWZYKkaTg2J8s7zeRC0h+Rhrb1IQZ5aj6oi7BhceHNIF3ri
        cLD9nUhMN2Vjju2prn4JzNbfKa50Q0ngfJMkznEYLx322qaIX5jhq/Ktc7TKtKc80z28pY1cTXnPv8x/
        C1Kc8juO3m83K+I7DjPKrCVNGiE5T7qWsqKjMbwurZ1LE8RDn8DauVoebBul1ArdyaqGxjo33dKkbc4G
        H9VU+SayCDlFQ5KrIqPQZdLskt4+ZYnQ4z6GnWf4KNsPTtvXfhUwIfiP2/lY2RpFTYzsrWVmxN7Y5jN6
        1qCHA/u2gWIoAmJyfhAxsljE5EFZ3FD7U5jdjrWLZvyAbw6ExkMSxEbAi7JuHBwGFTsMvtn5WDe9Fwik
        ZG7SOkJwZo4IzD0CpLTI7R2az3sK5sR+YzePQmmA7RUhEOWT7TajgcIr8jG7xH+xd2j5YWDed0I2ulkN
        S6Y01GxIsLdEfivWidJf0rGMdPFD2BwrwJhfoNRQ35zXVJnjHg5sPjgQCI4ZGn6rGo+10Gr0QPcck90+
        aBjId2HI1m+ehEbrJxtb/qfxQMiYDMrhFPv8hHP4MGLqIw3rdj7GIhdL8xv+pa1IJpxah1YVjS0ZXVeg
        kngxWLpfmDf/AIrRHfmtr/ip2ubin5cimNA/P4UjDe0ee6K/4rQ91DePQhDaDxFizBo580Fg3OdQzbOx
        D2jvBXykuMOfv0QkCny9EDG3zvB7qQEO8HvatF7T5LHSo4hMsLil1LQpol9S0+9J5J8hRxK68Gisq5Sq
        F73YcLapeRCkiPccoqJ83K+6WA0bJngpTDEsQ2tK181FiUNdn/aLVydeDw1eq5aahAy5Sc3/AE1bCgxM
        4bGi1Kht17X+iphs1Vz5FL1Th8GC/KRunqVLbmiZzd09SWxhzjKgEjyanMYKTW5Y2tIKHAiDKzd/kmiE
        843sqPUsawZZHY61Mhuolsa5RaobbnflLd09SIXK4ZW7p6kV8fbXI2k0/aVOkAQnUt3D1LQ1+c3dd1Ln
        tdgkSfehaQZSl52pG3/qDvNqPNywh+V7QNIFqHDS7j1Jgpw1N5pAsX2O/ZV/JC5rz3hx6kZhzOEGuxE1
        nvAeUymZIudx7/7utF2RxX0xw80xsKQwTrRAHT72paRHYS78tlpXOuZx71cuScS7RUPL1WkmgVOArwhG
        jU5uLT5JbYAPe8j5qxw8VRHMKcQNJOHH+ie1PT1huTxOlqb5SWuuXxuGxnSibBNJqHIpnZHO4FGgoXIf
        mO+3pQmBk7V+y86U8N08CiDMuDWjST/Dy77tpbzCwwRlf+zpVMtIGz1RB1JFRtS0akMAHvn7OlEYYHeO
        296VTOhx98UMSdL9gtCejUrgB3iRoDfzwSy5ufLQQBwIVL2Tx3x2JToeg4qDkqTgSxA35g+2xC8SxEnd
        5hOdBOAzOKWXmSp4lzige9QVwqljRHUu4dBUr3HPI2A8L0Kh9zjK1u9agdiyb3otpiKmMJ/zDtb6LUws
        0Dh0rFeoxBCJ+a6pnQqobHfNf/6+lStDaWe9CphSySP0nkj0cVw2uwf9R9TOlUww75j6mWKeE0Ut0zLh
        zVMOEDiLazasa0hzA4d99TLEwB05Xz8VLbFjYJyHzTWiXs2rOqG0HOd9tiMNOe7Ze2LmH3Mpnagf8lIL
        +p9TbFwnS+pvStdGJxGerD6JXbHEZjRi4SHBB4YQ7Odw6UIJz3fb0oWOcch42pocc08UDGT8bqx0rvqN
        bfREMmA8bFwg4Z/q+78JDGy8Tq1g1vrRtgmgy1eqF4lQD7oCNGQQApiVlEGtpfvOtSb0nERs/CwX0jjP
        vVJAyHFjfFvPtQXjaXb7rUAmMYGKkWhMa808RagYwwxp33+U115/cfrfajEX2JWc0IfP1A5I6MdeDx77
        7VhGh++/qXZRgyzXOdgo2oGQDpePffaha/Q/ffwKwxRglwQRIuH+nh6J9GQ0u0O33IC0UHfcgvpnFoy+
        WTHjTA4+/WSBkLcxpyOlg77ksth0HecmxXYZ3xGw2pER5w/qnhnj8sKqDHOaykjU8oHSyOO8T5Tki7Q4
        74yyTINeDWkl2mcqQFUTYW4NpJ2mdRxqeINe2+tVD5ahQCcNlahutgacEq24tvvCtfLOlOiCgcepcpnu
        M8ba22LlriSITAcc8HiKrhQhlLt5ylYzXs/CpZCJyGpHoRUy5iR/U/Y4qlly4JExNrikQIHu9NirbC0g
        axaFj6rWCZBAOI1m1bejxbx8lzbmn3wdgPJNh3JLKKgotWNgHjH1OtTA+gxN42omwZadh5Lg00Olqco0
        cKiEHCQ463WrA0Sl+qVAdwknGFQagJ8ZzRCBMYXHaCEafCGXK0901+qIXK0ZNUybVQLnGS92rjDlQltH
        Aw4IyN808QhP+kS2zS2spnsCIw9X2+qRcZEDc3geaxl7kaKxalvhSwl4GkuHkCAiYf8AuA6pysQOGhjc
        z3sWuZDONo2+qV2jc9prwbJlc1zT3gPrI4YPJGDjOyhnuNP0gpguWHL+hg+gcwlvDD/mNweJpqmFoLMk
        RlYokjo4L4dgyM3Rasbc8PNZuhFfjObsdLDtTG3k5mIN4JdHAfDw8xu61LfBGSGzdbYqJMwm/GHxhZOH
        nNP1BHRxMYA+U3dRNgtl/hQ9rQqe0h+GsIe0bSyu1G0alDBkhM3BYtYwfKZuixOBaMrBV5IhF0tT0uFd
        gMfZs3Au+GHy2boTTFb7lyQOjNo4FPoJiQgMcNo2WJJLMxtYRxY7aDPR6qOLdk8AE9c+mXFXJU1saIw/
        5baueJQvisyNH2onxfBUJKaNFn3T99i18xNxpuhtHAWLlOXmh1TupctMQihyGQbWhUsitxfo3WqeFHGc
        2snyCoZEbnNqNhVUeVtzOae62oKmYxBrd1TQXtIn2gGg/jAqWObP+tuw2rGtJjRLKwVeiJoBw3oRBzMk
        RuwjzWQoQMz2rj5bFC+GAjNB2GxMBGVnD0XNIA/xK5WrmkfMbTktUnwyQzQiDQBibwmua4Dvfci7Ruca
        x5zUnxjpUNx6LFwh0AViXki7ZmIuNYRCNDHfR0CbBFATPhxQNeD3+UsXbDzxWjN2jIQdqnpDZCAoWOIx
        zGyfIoRdgoOxC+6WnXpB85IygV8MpFVpSy9oyjdaEXajAZESoB5LH3SMOGtrkGXNtIxZrcNSHtgO9LBQ
        JeaL4gTxA/SbMK3thh/TUHWJjXC6ZZTw88QRw7qaZ4cVBafJJMRuK9G6eTV3btxSnLwu1SwjEjBxT8QJ
        TkfexZ8RknxCmbFJxw37qOHdGDBDcB/aQj5JSIume2xE99J97VO26MZcJfQcHBZ8UzOqB5YksBmDI6Wq
        SNr/AB48UpS9Uhj2mcg4n+1480b4ksF486m4tpTwaMP8fALnPOcUIjEYocSpo5pES6SMbCNd71IxOuim
        eVQXRDofLZ6Jrrtniaft5uUzrpecTTW0ng5aeZQkiQRnE7PRJdBwZeNipiF2a73omkEHNPvW6S2iKXeH
        20rlpb4ftZauVoQsuh1HE2qiHdLp4cA+q1edDuhgytrtKqhXRDpbscOpX6iZXptuzT5pjbsI73EWKNke
        H7d6pvxUPw73qsb5/Gkr1IN1Tw30qcI44FQ26BT5Lx4MeHLAWU4HH2VUyOw5mxZ3yvXotie5DkUbXDF/
        tFq8+HFYMWLQ08k/tmeLddYovk9i4OHseq0xBRLZYV5pjNodL+x9iMXU2WJ4/wDG+xL5o4vLxQKis7QU
        VA2rzzHb/wBz/TctN1M8W6UfJvQLgcY+42pZiNGTiOaj+KZS7dKWbsZPvbpsR80bHo9qNHCxaXaTv+ii
        F1sOK/2Md0oviGnO2tdYj5o2K2u1760u933ooHXUwY74bHLhdbNNRR80bFpcKa/QLg/Xt/KiF0g4mu2D
        1W/EHMfV6pfJ6rc5tOWeXyQGKMsqhh4KSLGBxw3HWAf9yJsUZIZ+y1P5JQCKBujpRTbmt1ZfJTGKPlur
        Zahv8H+G7Y5lqMC1sVoyDjYtN0D8zK88O8D62WpgijMdWy1HyFQjzOIVC1E6Pq3R1KJ8QfLP29SB8YT/
        AMI1t6kfIWmPhxcB1IXx9Q1CxSl9DCNF8OpLiRKYctbvVOeS06I4nCMNamiYco2g+Rche8ZtRbagL6G8
        WjyWkibSYjRkDNjfVTvbgxCr1TYrTjvazPjJSvhuoFX8VrIi0OCgbrbVySYGgV+i1XiNeZChnTWLVVCh
        HTvHkFO27fcv4qmFdhoNR6FpdRMObBNPnYnwoTsV97qSBdZ8dR6U9t0HxcehZ3WkquHDdgwmtUtnTh1r
        z/iSO6anf/NGy7HHEDuu6RJZ3zVz09FsI50q0LYYxXxNI/UQpW3Y6eJ9RsXG6nY5P3PVT81X0s7NujcQ
        gieAYtAsMlILqccQdpm1vWj7R9J3W9SPkfS9pAyftsWtLjinrAafIcl5xjPpOwNtQfEvocdd7al8DXsG
        DPHPjJE2GW4jLXhqwheXDup2UDF4ORVMO6jRxb1Kb5p6rLHHFenYOZKF8xjI2gDkFM+6z8sHa080HxBz
        XjVKVRPJHzRq1sQUgacFqwxZZftsURul1D622ohdLqHbb08EfI1e0mWN1XJLiTngHko3RXUftHJJMVxO
        IbSOH6UTyNVuDp4wNZC6Zp48ppDXvHuwLjGiUN2uNqeDVN6JYTWSB5oGsAGKeqdiS2Icd62f9/8AEor9
        xytGqdkkYNNiCWTePPGhJ8QOgYfIFT/qy3p+oz4BY9zhhDWa580YNPc7Dbg5LSJgYzsHmdqkMeJQNhlV
        +krjf5Wja93kRJP5LVwBGjX6HAgiRtIr9VIS/BIAanHjgSYva5f3Eck55GqxGoJ480mNEpw7DYkOa+WF
        tbyeSREJHdqiFVPKbTIsWjDrnzA4KdzjPEp4zXUAf+Q2hIMM0z1uJ8yVtPLO1U4aDxXKQwnUcPVcqz9R
        qZjzs97FVi/DVy5XUQ4A0DaAt7XVUuXLP/WgoT9VScX5ME9QsWrkrDlaxx0S1eiJoJM8GwDFUuXKaqKY
        bnUngm9q4ZTwXLlmpnaE5Si2rlyDc0kU+9q0RjPLw5hYuSBt+dPBCXGg8Fy5IAc+WOVQ15EXaaBsXLk8
        Bb4rqOK4F35PouXIBV+Tm1FcC6kLlyqk0hxoNdqHs3YsFX8ly5LTdenVhoFqCR0CtauTlAWO1cUxkUUD
        ZO3QVy5MDbFwf0+9pQPjChcuSwio0aXs8io4t008C7muXLTzE0p11NpI2c5Kd11j2Fy5bTzGVrjdbKft
        9Vy5cq+In6f/2Q==
</value>
  </data>
</root>